---

# Grafana Alloy prechecks
- name: Grafana Alloy prechecks
  tags:
    - always
    - prechecks
  block:

    # Validate operating system
    - name: Validate operating system
      ansible.builtin.assert:
        that:
          - ansible_facts['distribution'] in grafana_alloy_supported_os.keys()
          - ansible_facts['distribution_major_version'] in grafana_alloy_supported_os[ansible_facts['distribution']]
        fail_msg: Unsupported operating system

    # Merge defaults with overrides grafana_alloy_integration
    - name: Merge defaults with overrides grafana_alloy_integration
      ansible.builtin.set_fact:
        __grafana_alloy_integration: "{{ grafana_alloy_integration_defaults | combine(grafana_alloy_integration, recursive=True) }}"

    # Merge defaults with overrides grafana_alloy_remote_write
    - name: Merge defaults with overrides grafana_alloy_remote_write
      ansible.builtin.set_fact:
        __grafana_alloy_remote_write: "{{ grafana_alloy_remote_write_defaults | combine(grafana_alloy_remote_write, recursive=True) }}"

    # Merge defaults with overrides grafana_alloy_scrape
    - name: Merge defaults with overrides grafana_alloy_scrape
      ansible.builtin.set_fact:
        __grafana_alloy_scrape: "{{ grafana_alloy_scrape_defaults | combine(grafana_alloy_scrape, recursive=True) }}"

    # Validate Grafana Alloy version
    - name: Validate Grafana Alloy version
      ansible.builtin.uri:
        url: "{{ grafana_alloy_pkg_url }}"
        method: GET
        validate_certs: "{{ grafana_alloy_validate_certs }}"
        status_code: 200
      retries: 3
      delay: 5
      when:
        - grafana_alloy_uninstall | bool is false

    # Validate remote write endpoint
    - name: Validate remote write endpoint
      ansible.builtin.uri:
        url: "{{ __grafana_alloy_remote_write['url'] }}/-/healthy"
        method: GET
        validate_certs: "{{ grafana_alloy_validate_certs }}"
        status_code: 200
      register: _response
      when:
        - __grafana_alloy_remote_write['enabled'] | bool is true
        - __grafana_alloy_remote_write['basic_auth']['enabled'] | bool is false
        - grafana_alloy_uninstall | bool is false

    # Validate remote write endpoint when auth is enabled
    - name: Validate remote write endpoint when auth is enabled
      ansible.builtin.uri:
        url: "{{ __grafana_alloy_remote_write['url'] }}/-/healthy"
        method: GET
        validate_certs: "{{ grafana_alloy_validate_certs }}"
        status_code: 200
        force_basic_auth: true
        url_username: "{{ __grafana_alloy_remote_write['basic_auth']['username'] }}"
        url_password: "{{ __grafana_alloy_remote_write['basic_auth']['password'] }}"
      register: _response
      when:
        - __grafana_alloy_remote_write['enabled'] | bool is true
        - __grafana_alloy_remote_write['basic_auth']['enabled'] | bool is true
        - grafana_alloy_uninstall | bool is false

  rescue:

    # Grafana Alloy prechecks failed
    - name: Grafana Alloy prechecks failed
      ansible.builtin.fail:
        msg: Grafana Alloy prechecks failed
